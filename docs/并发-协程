开启协程的方式：
go 函数名
如：
func Test(msg string){
    fmt.Println("This is "+msg)
}

go Test("1")
go Test("2")

如上便开启了两个协程

func main(){
    go Test("routine 1")
    go Test("routine 2")

    fmt.Println("This is the main thread")
}

会发现只打印了"This is the main thread"就退出了，这是因为go开启的两个协程开启后，主进程会继续执行下面的程序，
直到cpu空闲时才会切换到协程，因此执行完主线程后程序就退出了，协程没有机会执行，
此处可在main函数最后添加一个Sleep(1*time.Second), 使主程序延迟1s退出，此时cpu处于空闲，可以执行协程，就会输出Test函数中的内容了。


用匿名函数启动协程
go func(para paratype){
    ...
}(para)              //加括号表示调用该函数

e.g.
ch := make(chan int)
go func(ch chan int){
    ch <- 1
}(ch)


协程与线程的主要区别
协程是非常轻量级的，一个协程如果不阻塞，会一直运行下去，而不会主动让出cpu去执行其他的协程
线程是给每个线程分配时间片，时间片用尽后就会切换到其他线程，线程切换需要保存线程执行的上下文，开销比较大